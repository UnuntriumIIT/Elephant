version: '3.4'

services:
  elephant:
    container_name: Elephant
    image: ${DOCKER_REGISTRY-}elephant
    build:
      context: .
      dockerfile: Elephant/Dockerfile
    ports:
      - "80:80"
    links:
      - "postgres:postgres"
      - "redis:redis"
      - "nginx:nginx"
    networks:
      - nginx_network

  postgres:
    container_name: Postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "elephant"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
    ports:
      - "5432:5432"
    networks:
      - nginx_network

  redis:
    container_name: Redis
    image: "redis:alpine"
    command: redis-server --requirepass password
    ports:
     - "6379:6379"
    environment:
     - REDIS_REPLICATION_MODE=master
    networks:
      - nginx_network

  rabbitmq:
    image: rabbitmq:management
    container_name: 'rabbitmq'
    environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: password
    ports:
        - 5672:5672
        - 15672:15672
    networks:
      - nginx_network

  nginx:
    container_name: Nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
        - "5001:80"
    links:
      - "api_00:api_00"
      - "api_10:api_10"
    networks:
      - nginx_network

  api_00:
    container_name: api_00
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Pub00/Dockerfile
    ports:
      - "5000:5000"
    links:
    - "rabbitmq:rabbitmq"
    depends_on:
        - rabbitmq
    networks:
      - nginx_network

  api_10:
    container_name: api_10
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Pub10/Dockerfile
    ports:
      - "5010:5000"
    links:
      - "rabbitmq:rabbitmq"
    depends_on:
        - rabbitmq
    networks:
      - nginx_network

  receiver_1:
    container_name: receiver_1
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Rec/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - nginx_network

  receiver_2:
    container_name: receiver_2
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Rec/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - nginx_network

  receiver_3:
    container_name: receiver_3
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Rec/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - nginx_network

  receiver_4:
    container_name: receiver_4
    restart: always
    build:
      context: .
      dockerfile: ResizeAPI/Rec/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - nginx_network

networks:
   nginx_network:
     driver: bridge
     ipam:
      config:
        - subnet: 172.28.0.0/16
          ip_range: 172.28.5.0/24
          gateway: 172.28.5.254
          aux_addresses:
            elephant: 172.28.1.5
            postgres: 172.28.1.6
            rabbitmq: 172.28.1.7
            redis: 172.28.1.8
            nginx: 172.28.1.9
            api_00: 172.28.1.10
            api_10: 172.28.1.11
            receiver_1: 172.28.1.12
            receiver_2: 172.28.1.13
            receiver_3: 172.28.1.14
            receiver_4: 172.28.1.15